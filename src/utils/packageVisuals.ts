export const getPackageIcon = (type: string): string => {
  // –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –ø–∞–∫–µ—Ç–∞
  const baseType = type.replace(/_month$|_year$/, '');
  
  switch (baseType) {
    case 'free': return 'leaf';
    case 'plus': return 'shield';
    case 'premium': return 'heart';
    case 'premiumPlus': return 'diamond';
    case 'single': return 'üé´';
    case 'weekly': return 'üìÖ';
    case 'monthly': return 'üìÜ';
    case 'yearly': return 'üìä';
    default: return 'leaf';
  }
};

export const getPackageColor = (type: string): string => {
  // –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –ø–∞–∫–µ—Ç–∞
  const baseType = type.replace(/_month$|_year$/, '');
  
  switch (baseType) {
    case 'free': return '#10B981';
    case 'plus': return '#3B82F6';
    case 'premium': return '#8B5CF6';
    case 'premiumPlus': return '#F59E0B';
    case 'single': return '#FF6B6B';
    case 'weekly': return '#4ECDC4';
    case 'monthly': return '#45B7D1';
    case 'yearly': return '#96CEB4';
    default: return '#10B981';
  }
};

export const getPackageLabel = (type: string): string => {
  // –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –ø–∞–∫–µ—Ç–∞
  const baseType = type.replace(/_month$|_year$/, '');
  
  switch (baseType) {
    case 'free': return '–ë–ï–°–ü–õ–ê–¢–ù–û';
    case 'plus': return '–ü–õ–Æ–°';
    case 'premium': return '–ü–†–ï–ú–ò–£–ú';
    case 'premiumPlus': return '–ü–†–ï–ú–ò–£–ú+';
    case 'single': return '–û–î–ò–ù';
    case 'weekly': return '–ù–ï–î–ï–õ–Ø';
    case 'monthly': return '–ú–ï–°–Ø–¶';
    case 'yearly': return '–ì–û–î';
    default: return '–ë–ï–°–ü–õ–ê–¢–ù–û';
  }
};

export const getPackageDecoration = (type: string): string => {
  // –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –ø–∞–∫–µ—Ç–∞
  const baseType = type.replace(/_month$|_year$/, '');
  
  switch (baseType) {
    case 'free': return 'leaf';
    case 'plus': return 'lead';
    case 'premium': return 'platinum';
    case 'premiumPlus': return 'gold';
    default: return 'leaf';
  }
};

export const formatPackagePrice = (price: number): string => {
  if (price === 0) return '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ';
  return `${Number(price || 0).toFixed(2)} AFc`;
};

export const isPremiumPackage = (type: string): boolean => {
  // –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –ø–∞–∫–µ—Ç–∞
  const baseType = type.replace(/_month$|_year$/, '');
  return ['free', 'plus', 'premium', 'premiumPlus'].includes(baseType);
}; 