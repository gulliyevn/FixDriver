#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üßπ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ console.log...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
function findFiles(dir, pattern, files = []) {
  const items = fs.readdirSync(dir);
  
  for (const item of items) {
    const fullPath = path.join(dir, item);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory() && !item.startsWith('.') && item !== 'node_modules') {
      findFiles(fullPath, pattern, files);
    } else if (stat.isFile() && pattern.test(item)) {
      files.push(fullPath);
    }
  }
  
  return files;
}

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ TypeScript —Ñ–∞–π–ª—ã
const tsFiles = findFiles(path.join(__dirname, '..', 'src'), /\.(ts|tsx)$/);
let totalRemoved = 0;
let filesProcessed = 0;

console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${tsFiles.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);

tsFiles.forEach(filePath => {
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    
    // –ë–ï–ó–û–ü–ê–°–ù–û–ï —É–¥–∞–ª–µ–Ω–∏–µ console.log - —Ç–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    const lines = content.split('\n');
    const filteredLines = lines.filter(line => {
      // –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –¢–û–õ–¨–ö–û console.log/warn/error
      const trimmed = line.trim();
      if (trimmed.match(/^\s*console\.(log|warn|error|info|debug)\([^;]*\);\s*$/)) {
        totalRemoved++;
        return false;
      }
      return true;
    });
    
    if (filteredLines.length !== lines.length) {
      content = filteredLines.join('\n');
      filesProcessed++;
      fs.writeFileSync(filePath, content);
      console.log(`‚úÖ ${filePath}: —É–¥–∞–ª–µ–Ω–æ ${lines.length - filteredLines.length} console.log`);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${filePath}:`, error.message);
  }
});

console.log(`\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
console.log(`   - –§–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${filesProcessed}`);
console.log(`   - Console.log —É–¥–∞–ª–µ–Ω–æ: ${totalRemoved}`);
console.log(`   - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: ${tsFiles.length}`);
