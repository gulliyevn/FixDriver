const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞...\n');

let hasErrors = false;

// 1. TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞
console.log('üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript...');
try {
  execSync('npx tsc --noEmit', { stdio: 'pipe' });
  console.log('‚úÖ TypeScript: OK');
} catch (error) {
  console.log('‚ùå TypeScript: –û—à–∏–±–∫–∏ –Ω–∞–π–¥–µ–Ω—ã');
  hasErrors = true;
}

// 2. ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞
console.log('üßπ –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint...');
try {
  execSync('npx eslint src/ --ext .ts,.tsx --max-warnings 0', { stdio: 'pipe' });
  console.log('‚úÖ ESLint: OK');
} catch (error) {
  console.log('‚ö†Ô∏è  ESLint: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã (–Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)');
}

// 3. Prettier –ø—Ä–æ–≤–µ—Ä–∫–∞
console.log('üíÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ Prettier...');
try {
  execSync('npx prettier --check src/', { stdio: 'pipe' });
  console.log('‚úÖ Prettier: OK');
} catch (error) {
  console.log('‚ö†Ô∏è  Prettier: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å');
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('üóëÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤...');
try {
  execSync('node scripts/find-unused-files-improved.js', { stdio: 'pipe' });
  console.log('‚úÖ –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã: OK');
} catch (error) {
  console.log('‚ö†Ô∏è  –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã');
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
console.log('üåç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤...');
try {
  execSync('node scripts/check-translations.js', { stdio: 'pipe' });
  console.log('‚úÖ –ü–µ—Ä–µ–≤–æ–¥—ã: OK');
} catch (error) {
  console.log('‚ö†Ô∏è  –ü–µ—Ä–µ–≤–æ–¥—ã: –ü—Ä–æ–±–ª–µ–º—ã –Ω–∞–π–¥–µ–Ω—ã');
}

// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è CI/CD)
console.log('üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤...');
try {
  execSync('npm test -- --passWithNoTests --watchAll=false', { stdio: 'pipe' });
  console.log('‚úÖ –¢–µ—Å—Ç—ã: OK');
} catch (error) {
  console.log('‚ö†Ô∏è  –¢–µ—Å—Ç—ã: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø–∞–¥–∞—é—Ç (–Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è CI/CD)');
  // –ù–µ —Å—á–∏—Ç–∞–µ–º —Ç–µ—Å—Ç—ã –∫—Ä–∏—Ç–∏—á–Ω—ã–º–∏ –¥–ª—è CI/CD
}

console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞:');
if (hasErrors) {
  console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –Ω–∞–π–¥–µ–Ω—ã!');
  process.exit(1);
} else {
  console.log('‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞ –≤ –ø–æ—Ä—è–¥–∫–µ!');
  process.exit(0);
}
