name: Code Quality

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: TypeScript check
      run: npm run type-check
      
    - name: ESLint check
      run: npm run lint
      continue-on-error: true
      
    - name: Format check
      run: npm run format:check
      continue-on-error: true
      
    - name: Run custom quality checks
      run: npm run ci
      continue-on-error: true
      
    - name: Comment PR with quality report
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let report = '## üìä Code Quality Report\n\n';
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          const typeCheck = '${{ job.status }}' === 'success';
          const lintCheck = '${{ steps.lint.outcome }}' === 'success';
          const formatCheck = '${{ steps.format.outcome }}' === 'success';
          
          report += `- **TypeScript:** ${typeCheck ? '‚úÖ Passed' : '‚ùå Failed'}\n`;
          report += `- **ESLint:** ${lintCheck ? '‚úÖ Passed' : '‚ö†Ô∏è Warnings'}\n`;
          report += `- **Prettier:** ${formatCheck ? '‚úÖ Passed' : '‚ùå Failed'}\n\n`;
          
          if (!typeCheck || !formatCheck) {
            report += 'üö® **Action Required:** Please fix the issues above before merging.\n\n';
          } else if (!lintCheck) {
            report += '‚ö†Ô∏è **Warning:** ESLint warnings detected. Consider fixing them for better code quality.\n\n';
          } else {
            report += 'üéâ **All checks passed!** Ready to merge.\n\n';
          }
          
          report += `**Workflow:** ${{ github.workflow }}\n`;
          report += `**Run ID:** ${{ github.run_id }}\n`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });
