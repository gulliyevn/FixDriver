name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: TypeScript check
      run: npm run type-check
      
    - name: ESLint check
      run: npm run lint
      continue-on-error: true  # –ù–µ –ø–∞–¥–∞–µ–º –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è—Ö
      
    - name: Format check
      run: npm run format:check
      continue-on-error: true

  # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run tests
      run: npm run test:ci
      continue-on-error: true  # –ù–µ –ø–∞–¥–∞–µ–º –Ω–∞ –ø–∞–¥–∞—é—â–∏—Ö —Ç–µ—Å—Ç–∞—Ö
      
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [quality-check, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build for production
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          build/
          dist/
        retention-days: 7

  # –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è main –≤–µ—Ç–∫–∏)
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment..."
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –≤ –æ–±–ª–∞–∫–æ
        
    - name: Notify deployment
      run: |
        echo "‚úÖ Deployment completed successfully!"
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (Slack, Discord, etc.)

  # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
      
    - name: Run custom security checks
      run: npm run ci
      continue-on-error: true